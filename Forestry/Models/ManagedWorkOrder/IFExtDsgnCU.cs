// Code generated by Microsoft (R) AutoRest Code Generator 0.15.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Forestry.Models.ManagedWorkOrder
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    
    

    public partial class IFExtDsgnCU
    {
        /// <summary>
        /// Initializes a new instance of the IFExtDsgnCU class.
        /// </summary>
        public IFExtDsgnCU() { }

        /// <summary>
        /// Initializes a new instance of the IFExtDsgnCU class.
        /// </summary>
        public IFExtDsgnCU(string cuCode = default(string), string accountIndicator = default(string), string onOffIndicator = default(string), string usageCode = default(string), string supplyMethodCode = default(string), string equipmentNumber = default(string), DateTime? completionDate = default(DateTime?), string actionIndicator = default(string), double? actionQuantity = default(double?), string muCode = default(string), long? externalDesignSequence = default(long?), DateTime? externalDesignTimeStamp = default(DateTime?), string operatorId = default(string), string pointNumber = default(string), string pointSpanNumber = default(string), string district = default(string), long? workRequest = default(long?), string processIndicator = default(string), long? workpacket = default(long?), string crewCode = default(string), string errorFlag = default(string), long? errorRunSequence = default(long?), string contractorFlag = default(string), long? facilityNumber = default(long?), IList<IFExtDsgnFacAtt> ifExtDsgnFacAtt = default(IList<IFExtDsgnFacAtt>))
        {
            CuCode = cuCode;
            AccountIndicator = accountIndicator;
            OnOffIndicator = onOffIndicator;
            UsageCode = usageCode;
            SupplyMethodCode = supplyMethodCode;
            EquipmentNumber = equipmentNumber;
            CompletionDate = completionDate;
            ActionIndicator = actionIndicator;
            ActionQuantity = actionQuantity;
            MuCode = muCode;
            ExternalDesignSequence = externalDesignSequence;
            ExternalDesignTimeStamp = externalDesignTimeStamp;
            OperatorId = operatorId;
            PointNumber = pointNumber;
            PointSpanNumber = pointSpanNumber;
            District = district;
            WorkRequest = workRequest;
            ProcessIndicator = processIndicator;
            Workpacket = workpacket;
            CrewCode = crewCode;
            ErrorFlag = errorFlag;
            ErrorRunSequence = errorRunSequence;
            ContractorFlag = contractorFlag;
            FacilityNumber = facilityNumber;
            IfExtDsgnFacAtt = ifExtDsgnFacAtt;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cuCode")]
        public string CuCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accountIndicator")]
        public string AccountIndicator { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "onOffIndicator")]
        public string OnOffIndicator { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "usageCode")]
        public string UsageCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "supplyMethodCode")]
        public string SupplyMethodCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "equipmentNumber")]
        public string EquipmentNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "completionDate")]
        public DateTime? CompletionDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "actionIndicator")]
        public string ActionIndicator { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "actionQuantity")]
        public double? ActionQuantity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "muCode")]
        public string MuCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "externalDesignSequence")]
        public long? ExternalDesignSequence { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "externalDesignTimeStamp")]
        public DateTime? ExternalDesignTimeStamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "operatorId")]
        public string OperatorId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pointNumber")]
        public string PointNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pointSpanNumber")]
        public string PointSpanNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "district")]
        public string District { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "workRequest")]
        public long? WorkRequest { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processIndicator")]
        public string ProcessIndicator { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "workpacket")]
        public long? Workpacket { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "crewCode")]
        public string CrewCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "errorFlag")]
        public string ErrorFlag { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "errorRunSequence")]
        public long? ErrorRunSequence { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contractorFlag")]
        public string ContractorFlag { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "facilityNumber")]
        public long? FacilityNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ifExtDsgnFacAtt")]
        public IList<IFExtDsgnFacAtt> IfExtDsgnFacAtt { get; set; }

    }
}
